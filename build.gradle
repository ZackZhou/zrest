/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/tutorial_groovy_projects.html
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
    id 'java-library'
    id 'java'
    id "io.qameta.allure" version "2.8.1" // used to enable the allureReport/allureServe tasks
}

dependencies {
    // Use the latest Groovy version for building this library
    compile 'io.rest-assured:rest-assured:4.2.0' // do not use the latest version of rest_assured, there is a critical bug. https://stackoverflow.com/questions/61457462/console-error-when-running-rest-assured-api-test-with-testng
    compile 'io.rest-assured:json-path:4.2.0'
    compile 'io.qameta.allure:allure-rest-assured:2.8.1'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.30' //不知道是哪个lib内部用到了slf4j,导致出现error,重复引用日志包来避免error出现
    compile 'org.testng:testng:6.14.3'

    compile 'mysql:mysql-connector-java:8.0.20' // Sql driver
    compile 'org.codehaus.groovy:groovy-all:2.5.8' //mysql needed, groovy version need to match with rest-assured version

    testCompile 'io.qameta.allure:allure-rest-assured:2.8.1'
    testCompile 'log4j:log4j:1.2.17'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

test {
    useTestNG(){
        //testng settings here, i.e. convert testng.xml suites to gradle tasks
    }
    systemProperty 'allure.model.indentOutput', true
    //将所有项目的属性转化为系统属性,也就是把 gradle.properties 里面的属性,转化为系统属性,仅在使用gradle启动程序的时候生效
    System.getProperties().each {key,value ->
        systemProperty key, value
    }
}

allure {
    version = '2.8.1'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.8.1'
}

//将所有testng的xml转化为gradle的task
def given_suites = new File("${projectDir}/src/test/resources/suites")

def convert_to_task = { File file ->
    file.listFiles().each {
        if(it.isFile()) {
            def task_name = it.name.split('\\.')[0]
            def path = it.path.replace(projectDir.path,'')
            if(task_name.isEmpty())
                return
            task(task_name,type: Test) {
                group 'verification'
                useTestNG() { //Tells Gradle to use TestNG
                    suites path //location of our suite.xml
                }
            }
        }
        else
            owner.call(it)
    }
}

convert_to_task(given_suites)